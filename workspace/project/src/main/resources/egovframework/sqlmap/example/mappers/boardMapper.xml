<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.board.service.impl.BoardMapper">
	<select id="selectBoardList" parameterType="searchVO" resultType="boardVO">
			SELECT  BOARD_IDX
			      , WRITER
			      , TITLE
			      , CONTENT
			      , UES_YN
			      , DATE_CREATED
			      , DATE_MODIFY
			      , VIEW_COUNT
			      , LIKE_COUNT
			  FROM BOARD
			 WHERE 1=1
			<if test="searchKeyword != null and searchKeyword != ''">
		        <choose>
		            <when test="searchCondition == 1">
						AND	TITLE LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
		            <when test="searchCondition == 2">
						AND	CONTENT LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
				</choose>
			</if>
			   AND UES_YN     = 'N'
			 ORDER BY 1 DESC
			 LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
	</select>

	<select id="selectBoardListTotCnt" parameterType="searchVO" resultType="int">
			SELECT COUNT(*) totcnt
			  FROM BOARD
			 WHERE 1=1
			<if test="searchKeyword != null and searchKeyword != ''">
		        <choose>
		            <when test="searchCondition == 1">
						AND TITLE LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
		            <when test="searchCondition == 2">
						AND	CONTENT LIKE CONCAT('%', #{searchKeyword}, '%')
					</when>
				</choose>
			</if>
	</select>
	
	<select id="selectBoard" resultType="boardVO">
		SELECT BOARD_IDX
		     , WRITER
		     , TITLE
		     , CONTENT
		     , UES_YN
		     , DATE_CREATED
		     , DATE_MODIFY
		     , VIEW_COUNT
		     , LIKE_COUNT
		  FROM BOARD
		 WHERE BOARD_IDX = #{board_idx}
	</select>
	
	<insert id="insert" parameterType="boardVO">
		INSERT INTO BOARD
			 ( WRITER
		     , TITLE
		     , CONTENT
		     , UES_YN
		     , DATE_CREATED )
		VALUES
			 ( #{writer}
			 , #{title}
			 , #{content}
			 , 'N'
			 , NOW() )
	</insert>
	
	<select id="maxBoardIndex" resultType="int">
		SELECT MAX(BOARD_IDX) BOARD_IDX
  		  FROM BOARD
	</select>
	
	<update id="update" parameterType="boardVO">
		UPDATE BOARD
		   SET TITLE       = #{title}
		     , CONTENT     = #{content}
		     , DATE_MODIFY = NOW()
		 WHERE BOARD_IDX   = #{board_idx}
	</update>
	
	<update id="delete" parameterType="int">
		UPDATE BOARD 
		   SET UES_YN    = 'Y'
		 WHERE BOARD_IDX =  #{board_idx}
	</update>
	
	
	<!-- REPLY PARENT SELECT -->
	<select id="getParentReply" resultType="replyVO" parameterType="int">
		 SELECT REPLY_IDX
	          , BOARD_IDX
	          , WRITER
	          , CONTENT
	          , UES_YN
	          , GROUP_ORD
	          , GROUP_LAYER
	      FROM REPLY
	     WHERE BOARD_IDX = #{board_idx}
	       AND UES_YN    = 'N'
	       AND GROUP_LAYER IS NULL
	     ORDER BY REPLY_IDX DESC, GROUP_ORD ASC
	</select>
	
	<!-- REPLY CHILD SELECT -->
	<select id="getChildReplyList" parameterType="map" resultType="replyVO">
		SELECT REPLY_IDX
		     , BOARD_IDX
		     , WRITER
		     , CONTENT
		     , GROUP_ORD
		     , GROUP_LAYER
		     , UES_YN 
		  FROM REPLY
		 WHERE GROUP_LAYER = #{reply_idx}
		   AND BOARD_IDX   = #{board_idx}
		   AND UES_YN      = 'N'
		 ORDER BY REPLY_IDX DESC, GROUP_ORD ASC
	</select>
	
	<!-- REPLY PARENT INSERT -->
	<insert id="prentReplySave" parameterType="replyVO">
		INSERT INTO REPLY 
		       ( BOARD_IDX
		       , WRITER
		       , CONTENT
		       , GROUP_ORD
		       , UES_YN
		       )  
		VALUES ( #{board_idx}
			   , #{writer}
			   , #{content}
			   , ( IFNULL((SELECT MAX(R.GROUP_ORD) + 1 AS GROUP_ORD
			                 FROM REPLY R
			                WHERE R.BOARD_IDX = #{board_idx}), 0))
			   , 'N'
			   )
	</insert>
</mapper>